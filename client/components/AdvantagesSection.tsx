import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import {
  ChevronLeft,
  ChevronRight,
  Shield,
  Clock,
  Users,
  Trophy,
} from "lucide-react";

const AdvantagesSection = () => {
  const [currentSlide, setCurrentSlide] = useState(0);

  const advantages = [
    {
      icon: Shield,
      title: "–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å",
      description:
        "–ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π",
      image: "üõ°Ô∏è",
    },
    {
      icon: Users,
      title: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º",
      description:
        "–ö–æ–º–∞–Ω–¥–∞ —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π 1–°-–ë–∏—Ç—Ä–∏–∫—Å",
      image: "üë•",
    },
    {
      icon: Clock,
      title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7",
      description:
        "–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ª—é–±—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ —Ä–∞–±–æ—Ç–µ –≤–∞—à–∏—Ö –≤–µ–±-—Ä–µ—Å—É—Ä—Å–æ–≤",
      image: "üïí",
    },
    {
      icon: Trophy,
      title: "–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã",
      description:
        "–ë–æ–ª–µ–µ 8 –ª–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, 100+ —É—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Ä–∞–∑–ª–∏—á–Ω–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏",
      image: "üèÜ",
    },
  ];

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % advantages.length);
  };

  const prevSlide = () => {
    setCurrentSlide(
      (prev) => (prev - 1 + advantages.length) % advantages.length,
    );
  };

  return (
    <section className="py-[30px] lg:py-[50px] bg-gradient-to-br from-background via-muted/20 to-background relative">
      <div className="absolute inset-0 bg-gradient-to-r from-purple-500/5 via-transparent to-red-500/5"></div>
      <div className="container mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center space-y-4 mb-16">
          <h2 className="text-3xl lg:text-4xl font-bold text-foreground">
            –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã —Å –Ω–∞–º–∏
          </h2>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
            –ü–æ—á–µ–º—É –∫–ª–∏–µ–Ω—Ç—ã –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–≤–æ–∏—Ö –≤–µ–±-–ø—Ä–æ–µ–∫—Ç–æ–≤
          </p>
        </div>

        {/* Desktop view - Grid */}
        <div className="hidden lg:grid lg:grid-cols-4 gap-8">
          {advantages.map((advantage, index) => {
            const Icon = advantage.icon;
            return (
              <Card key={index} className="text-center">
                <CardContent className="p-8 space-y-4">
                  <div className="mx-auto w-20 h-20 bg-primary/10 rounded-full flex items-center justify-center">
                    <span className="text-3xl">{advantage.image}</span>
                  </div>
                  <div className="space-y-2">
                    <h3 className="text-xl font-semibold">{advantage.title}</h3>
                    <p className="text-sm text-muted-foreground">
                      {advantage.description}
                    </p>
                  </div>
                </CardContent>
              </Card>
            );
          })}
        </div>

        {/* Mobile view - Slider */}
        <div className="lg:hidden">
          <div className="relative">
            <Card>
              <CardContent className="p-8 text-center space-y-6">
                <div className="mx-auto w-24 h-24 bg-primary/10 rounded-full flex items-center justify-center">
                  <span className="text-4xl">
                    {advantages[currentSlide].image}
                  </span>
                </div>
                <div className="space-y-4">
                  <h3 className="text-2xl font-semibold">
                    {advantages[currentSlide].title}
                  </h3>
                  <p className="text-muted-foreground">
                    {advantages[currentSlide].description}
                  </p>
                </div>
              </CardContent>
            </Card>

            {/* Navigation */}
            <div className="flex justify-between items-center mt-6">
              <Button
                variant="outline"
                size="sm"
                onClick={prevSlide}
                className="p-2"
              >
                <ChevronLeft className="h-4 w-4" />
              </Button>

              <div className="flex space-x-2">
                {advantages.map((_, index) => (
                  <button
                    key={index}
                    onClick={() => setCurrentSlide(index)}
                    className={`w-2 h-2 rounded-full transition-colors ${
                      index === currentSlide ? "bg-primary" : "bg-muted"
                    }`}
                  />
                ))}
              </div>

              <Button
                variant="outline"
                size="sm"
                onClick={nextSlide}
                className="p-2"
              >
                <ChevronRight className="h-4 w-4" />
              </Button>
            </div>
          </div>
        </div>

        <div className="text-center mt-16">
          <Button
            size="lg"
            onClick={() => {
              const contactsSection =
                document.getElementById("contacts-section");
              if (contactsSection) {
                contactsSection.scrollIntoView({ behavior: "smooth" });
              }
            }}
          >
            –ù–∞—á–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ
          </Button>
        </div>
      </div>
    </section>
  );
};

export default AdvantagesSection;
